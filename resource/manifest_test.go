package resource

import (
	"github.com/gsamokovarov/assert"
	"testing"
)

func TestParseFromManifest(t *testing.T) {
	manifest := "---\n# Source: alauda-container-platform/templates/log/events-crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  # name must match the spec fields below, and be in the form: <plural>.<group>\n  name: events.aiops.alauda.io\nspec:\n  # group name to use for REST API: /apis/<group>/<version>\n  group: aiops.alauda.io\n  # list of versions supported by this CustomResourceDefinition\n  versions:\n    - name: v1beta1\n      # Each version can be enabled/disabled by Served flag.\n      served: true\n      # One and only one version must be marked as the storage version.\n      storage: true\n  # either Namespaced or Cluster\n  scope: Namespaced\n  names:\n    # plural name to be used in the URL: /apis/<group>/<version>/<plural>\n    plural: events\n    # singular name to be used as an alias on the CLI and for display\n    singular: events\n    # kind is normally the CamelCased singular type. Your resource manifests use this.\n    kind: Events\n---\n# Source: alauda-container-platform/templates/monitoring/alert_template_crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: null\n  name: alerttemplates.aiops.alauda.io\nspec:\n  group: aiops.alauda.io\n  names:\n    kind: AlertTemplate\n    plural: alerttemplates\n  scope: Cluster\n  validation:\n    openAPIV3Schema:\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          description: ObjectMeta is metadata that all persisted resources must have,\n            which includes all objects users must create.\n          properties:\n            annotations:\n              description: 'Annotations is an unstructured key value map stored with\n                a resource that may be set by external tools to store and retrieve\n                arbitrary metadata. They are not queryable and should be preserved\n                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'\n              type: object\n            clusterName:\n              description: The name of the cluster which the object belongs to. This\n                is used to distinguish resources with same name and namespace in different\n                clusters. This field is not set anywhere right now and apiserver is\n                going to ignore it if set in create or update request.\n              type: string\n            creationTimestamp:\n              description: Time is a wrapper around time.Time which supports correct\n                marshaling to YAML and JSON.  Wrappers are provided for many of the\n                factory methods that the time package offers.\n              format: date-time\n              type: string\n            deletionGracePeriodSeconds:\n              description: Number of seconds allowed for this object to gracefully\n                terminate before it will be removed from the system. Only set when\n                deletionTimestamp is also set. May only be shortened. Read-only.\n              format: int64\n              type: integer\n            deletionTimestamp:\n              description: Time is a wrapper around time.Time which supports correct\n                marshaling to YAML and JSON.  Wrappers are provided for many of the\n                factory methods that the time package offers.\n              format: date-time\n              type: string\n            finalizers:\n              description: Must be empty before the object is deleted from the registry.\n                Each entry is an identifier for the responsible component that will\n                remove the entry from the list. If the deletionTimestamp of the object\n                is non-nil, entries in this list can only be removed.\n              items:\n                type: string\n              type: array\n            generateName:\n              description: |-\n                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n                If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n              type: string\n            generation:\n              description: A sequence number representing a specific generation of\n                the desired state. Populated by the system. Read-only.\n              format: int64\n              type: integer\n            initializers:\n              description: Initializers tracks the progress of initialization.\n              properties:\n                pending:\n                  description: Pending is a list of initializers that must execute\n                    in order before this object is visible. When the last pending\n                    initializer is removed, and no failing result is set, the initializers\n                    struct will be set to nil and the object is considered as initialized\n                    and visible to all clients.\n                  items:\n                    description: Initializer is information about an initializer that\n                      has not yet completed.\n                    properties:\n                      name:\n                        description: name of the process that is responsible for initializing\n                          this object.\n                        type: string\n                    required:\n                    - name\n                  type: array\n                result:\n                  description: Status is a return value for calls that don't return\n                    other objects.\n                  properties:\n                    apiVersion:\n                      description: 'APIVersion defines the versioned schema of this\n                        representation of an object. Servers should convert recognized\n                        schemas to the latest internal value, and may reject unrecognized\n                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n                      type: string\n                    code:\n                      description: Suggested HTTP return code for this status, 0 if\n                        not set.\n                      format: int32\n                      type: integer\n                    details:\n                      description: StatusDetails is a set of additional properties\n                        that MAY be set by the server to provide additional information\n                        about a response. The Reason field of a Status object defines\n                        what attributes will be set. Clients must ignore fields that\n                        do not match the defined type of each attribute, and should\n                        assume that any attribute may be empty, invalid, or under\n                        defined.\n                      properties:\n                        causes:\n                          description: The Causes array includes more details associated\n                            with the StatusReason failure. Not all StatusReasons may\n                            provide detailed causes.\n                          items:\n                            description: StatusCause provides more information about\n                              an api.Status failure, including cases when multiple\n                              errors are encountered.\n                            properties:\n                              field:\n                                description: |-\n                                  The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\n                                  Examples:\n                                    \"name\" - the field \"name\" on the current resource\n                                    \"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n                                type: string\n                              message:\n                                description: A human-readable description of the cause\n                                  of the error.  This field may be presented as-is\n                                  to a reader.\n                                type: string\n                              reason:\n                                description: A machine-readable description of the\n                                  cause of the error. If this value is empty there\n                                  is no information available.\n                                type: string\n                          type: array\n                        group:\n                          description: The group attribute of the resource associated\n                            with the status StatusReason.\n                          type: string\n                        kind:\n                          description: 'The kind attribute of the resource associated\n                            with the status StatusReason. On some operations may differ\n                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n                          type: string\n                        name:\n                          description: The name attribute of the resource associated\n                            with the status StatusReason (when there is a single name\n                            which can be described).\n                          type: string\n                        retryAfterSeconds:\n                          description: If specified, the time in seconds before the\n                            operation should be retried. Some errors may indicate\n                            the client must take an alternate action - for those errors\n                            this field may indicate how long to wait before taking\n                            the alternate action.\n                          format: int32\n                          type: integer\n                        uid:\n                          description: 'UID of the resource. (when there is a single\n                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'\n                          type: string\n                    kind:\n                      description: 'Kind is a string value representing the REST resource\n                        this object represents. Servers may infer this from the endpoint\n                        the client submits requests to. Cannot be updated. In CamelCase.\n                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n                      type: string\n                    message:\n                      description: A human-readable description of the status of this\n                        operation.\n                      type: string\n                    metadata:\n                      description: ListMeta describes metadata that synthetic resources\n                        must have, including lists and various status objects. A resource\n                        may have only one of {ObjectMeta, ListMeta}.\n                      properties:\n                        continue:\n                          description: continue may be set if the user set a limit\n                            on the number of items returned, and indicates that the\n                            server has more data available. The value is opaque and\n                            may be used to issue another request to the endpoint that\n                            served this list to retrieve the next set of available\n                            objects. Continuing a consistent list may not be possible\n                            if the server configuration has changed or more than a\n                            few minutes have passed. The resourceVersion field returned\n                            when using this continue value will be identical to the\n                            value in the first response, unless you have received\n                            this token from an error message.\n                          type: string\n                        resourceVersion:\n                          description: 'String that identifies the server''s internal\n                            version of this object that can be used by clients to\n                            determine when objects have changed. Value must be treated\n                            as opaque by clients and passed unmodified back to the\n                            server. Populated by the system. Read-only. More info:\n                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'\n                          type: string\n                        selfLink:\n                          description: selfLink is a URL representing this object.\n                            Populated by the system. Read-only.\n                          type: string\n                    reason:\n                      description: A machine-readable description of why this operation\n                        is in the \"Failure\" status. If this value is empty there is\n                        no information available. A Reason clarifies an HTTP status\n                        code but does not override it.\n                      type: string\n                    status:\n                      description: 'Status of the operation. One of: \"Success\" or\n                        \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'\n                      type: string\n              required:\n              - pending\n            labels:\n              description: 'Map of string keys and values that can be used to organize\n                and categorize (scope and select) objects. May match selectors of\n                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'\n              type: object\n            name:\n              description: 'Name must be unique within a namespace. Is required when\n                creating resources, although some resources may allow a client to\n                request the generation of an appropriate name automatically. Name\n                is primarily intended for creation idempotence and configuration definition.\n                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n              type: string\n            namespace:\n              description: |-\n                Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n                Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n              type: string\n            ownerReferences:\n              description: List of objects depended by this object. If ALL objects\n                in the list have been deleted, this object will be garbage collected.\n                If this object is managed by a controller, then an entry in this list\n                will point to this controller, with the controller field set to true.\n                There cannot be more than one managing controller.\n              items:\n                description: OwnerReference contains enough information to let you\n                  identify an owning object. An owning object must be in the same\n                  namespace as the dependent, or be cluster-scoped, so there is no\n                  namespace field.\n                properties:\n                  apiVersion:\n                    description: API version of the referent.\n                    type: string\n                  blockOwnerDeletion:\n                    description: If true, AND if the owner has the \"foregroundDeletion\"\n                      finalizer, then the owner cannot be deleted from the key-value\n                      store until this reference is removed. Defaults to false. To\n                      set this field, a user needs \"delete\" permission of the owner,\n                      otherwise 422 (Unprocessable Entity) will be returned.\n                    type: boolean\n                  controller:\n                    description: If true, this reference points to the managing controller.\n                    type: boolean\n                  kind:\n                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n                    type: string\n                  name:\n                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                    type: string\n                  uid:\n                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'\n                    type: string\n                required:\n                - apiVersion\n                - kind\n                - name\n                - uid\n              type: array\n            resourceVersion:\n              description: |-\n                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n              type: string\n            selfLink:\n              description: SelfLink is a URL representing this object. Populated by\n                the system. Read-only.\n              type: string\n            uid:\n              description: |-\n                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n                Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n              type: string\n        spec:\n          description: spec contains specification parameters for a template resource\n          properties:\n            templates:\n              description: templates is a list of alert template\n              type: array\n              items:\n                description: template item\n                properties:\n                  compare:\n                    description: compare of a template\n                    type: string\n                  metric:\n                    description: metric info for this alert\n                    properties:\n                      queries:\n                        description: queries array for this metric\n                        type: array\n                        items:\n                          properties:\n                            aggregator:\n                              description: aggregator functions\n                              type: string\n                            labels:\n                              description: labels for alert object\n                              type: array\n                              items:\n                                properties:\n                                  name:\n                                    description: label name\n                                    type: string\n                                  value:\n                                    description: label value\n                                    type: string\n                            range:\n                              description: aggregate range\n                              type: integer\n                  name:\n                    description: alert range\n                    type: string\n                  notifications:\n                    description: notifcations triggered by this alert\n                    type: array\n                    items:\n                      properties:\n                        name:\n                          description: notification name\n                          type: string\n                        namespace:\n                          description: notification namespace\n                          type: string\n                        uuid:\n                          description: notification uuid\n                          type: string\n                  threshold:\n                    description: alert threshold\n                    type: number\n                  unit:\n                    description: unit for metric\n                    type: string\n                  wait:\n                    description: time of duration\n                    type: integer\n                required:\n                - compare\n                - metric\n                - name\n                - threshold\n                - wait\n  version: v1beta1\n---\n# Source: alauda-container-platform/templates/notification/notification_crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: null\n  labels:\n    controller-tools.k8s.io: \"1.0\"\n  name: notifications.aiops.alauda.io\nspec:\n  group: aiops.alauda.io\n  names:\n    kind: Notification\n    plural: notifications\n    shortNames:\n    - nf\n  scope: Namespaced\n  validation:\n    openAPIV3Schema:\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          type: object\n        spec:\n          properties:\n            subscriptions:\n              description: Subscriptions for this notification\n              items:\n                properties:\n                  method:\n                    description: Method of recipient, such as email/dingding/sms/webhook\n                    type: string\n                  recipient:\n                    description: Recipients, multiple recipients will be separated\n                      by comma\n                    type: string\n                  sender:\n                    description: Sender for this receiver\n                    type: string\n                  template:\n                    description: Template to render notification message\n                    type: string\n                required:\n                - method\n                - recipient\n                type: object\n              type: array\n          type: object\n      required:\n      - spec\n  version: v1beta1\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []\n---\n# Source: alauda-container-platform/templates/notification/notificationmessage_crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: null\n  labels:\n    controller-tools.k8s.io: \"1.0\"\n  name: notificationmessages.aiops.alauda.io\nspec:\n  group: aiops.alauda.io\n  names:\n    kind: NotificationMessage\n    plural: notificationmessages\n    shortNames:\n    - nfm\n  scope: Namespaced\n  subresources:\n    status: {}\n  validation:\n    openAPIV3Schema:\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          type: object\n        spec:\n          properties:\n            body:\n              description: Message body, json in any form\n              type: object\n            notifications:\n              description: Notifications associated by this message\n              items:\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              type: array\n          required:\n          - notifications\n          - body\n          type: object\n        status:\n          properties:\n            conditions:\n              items:\n                properties:\n                  lastTransitionTime:\n                    description: Last time the condition transit from one status to\n                      another.\n                    format: date-time\n                    type: string\n                  message:\n                    description: Human readable message indicating details about last\n                      transition.\n                    type: string\n                  reason:\n                    description: Brief reason for the condition's last transition.\n                    type: string\n                  retryTimes:\n                    description: Retry times for this notification message.\n                    format: int64\n                    type: integer\n                  status:\n                    description: Status of the condition, one of True, False, Unknown.\n                    type: string\n                  type:\n                    description: Type of notification message condition.\n                    type: string\n                required:\n                - type\n                - status\n                type: object\n              type: array\n          type: object\n      required:\n      - spec\n  version: v1beta1\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []\n---\n# Source: alauda-container-platform/templates/notification/notificationsender_crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: null\n  labels:\n    controller-tools.k8s.io: \"1.0\"\n  name: notificationsenders.aiops.alauda.io\nspec:\n  group: aiops.alauda.io\n  names:\n    kind: NotificationSender\n    plural: notificationsenders\n    shortNames:\n    - nfs\n  scope: Cluster\n  validation:\n    openAPIV3Schema:\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          type: object\n        spec:\n          properties:\n            email:\n              description: Email sender configuration\n              properties:\n                host:\n                  description: Email vendor's host\n                  type: string\n                insecureSkipVerify:\n                  description: Skip insecure verify or not, default is false\n                  type: boolean\n                password:\n                  description: Email sender's password\n                  properties:\n                    value:\n                      description: Direct value for this field\n                      type: string\n                    valueFromSecret:\n                      description: Refer value from secret for this field\n                      properties:\n                        key:\n                          description: Key in secret\n                          type: string\n                        name:\n                          description: Secret's name\n                          type: string\n                        namespace:\n                          description: Secret's namespace\n                          type: string\n                      required:\n                      - name\n                      - namespace\n                      - key\n                      type: object\n                  type: object\n                port:\n                  description: Email vendor's port\n                  format: int32\n                  type: integer\n                sslEnabled:\n                  description: Enable ssl for connection, default is false\n                  type: boolean\n                username:\n                  description: Email sender's username\n                  type: string\n              required:\n              - username\n              - password\n              - host\n              - port\n              type: object\n            sms:\n              description: Sms sender configuration\n              properties:\n                accountSid:\n                  description: AccountSid from sms vendor\n                  properties:\n                    value:\n                      description: Direct value for this field\n                      type: string\n                    valueFromSecret:\n                      description: Refer value from secret for this field\n                      properties:\n                        key:\n                          description: Key in secret\n                          type: string\n                        name:\n                          description: Secret's name\n                          type: string\n                        namespace:\n                          description: Secret's namespace\n                          type: string\n                      required:\n                      - name\n                      - namespace\n                      - key\n                      type: object\n                  type: object\n                accountToken:\n                  description: AccountToken from sms vendor\n                  properties:\n                    value:\n                      description: Direct value for this field\n                      type: string\n                    valueFromSecret:\n                      description: Refer value from secret for this field\n                      properties:\n                        key:\n                          description: Key in secret\n                          type: string\n                        name:\n                          description: Secret's name\n                          type: string\n                        namespace:\n                          description: Secret's namespace\n                          type: string\n                      required:\n                      - name\n                      - namespace\n                      - key\n                      type: object\n                  type: object\n                appId:\n                  description: Sms sender's app id\n                  type: string\n                host:\n                  description: Sms vendor's host\n                  type: string\n                port:\n                  description: Sms vendor's port\n                  format: int32\n                  type: integer\n                softVersion:\n                  description: Sms vendor's software version\n                  type: string\n                templateId:\n                  description: Sms sender's template id\n                  type: string\n              required:\n              - accountSid\n              - accountToken\n              - host\n              - port\n              type: object\n            webhook:\n              description: Webhook sender configuration\n              properties:\n                auth:\n                  description: Auth for this webhook\n                  properties:\n                    basic:\n                      description: Basic auth configuration\n                      properties:\n                        password:\n                          description: Basic auth password\n                          properties:\n                            value:\n                              description: Direct value for this field\n                              type: string\n                            valueFromSecret:\n                              description: Refer value from secret for this field\n                              properties:\n                                key:\n                                  description: Key in secret\n                                  type: string\n                                name:\n                                  description: Secret's name\n                                  type: string\n                                namespace:\n                                  description: Secret's namespace\n                                  type: string\n                              required:\n                              - name\n                              - namespace\n                              - key\n                              type: object\n                          type: object\n                        username:\n                          description: Basic auth username\n                          type: string\n                      required:\n                      - username\n                      - password\n                      type: object\n                  type: object\n                headers:\n                  description: Headers for this webhook\n                  items:\n                    properties:\n                      key:\n                        description: Key for this dict item\n                        type: string\n                      value:\n                        description: Value for this dict item\n                        properties:\n                          value:\n                            description: Direct value for this field\n                            type: string\n                          valueFromSecret:\n                            description: Refer value from secret for this field\n                            properties:\n                              key:\n                                description: Key in secret\n                                type: string\n                              name:\n                                description: Secret's name\n                                type: string\n                              namespace:\n                                description: Secret's namespace\n                                type: string\n                            required:\n                            - name\n                            - namespace\n                            - key\n                            type: object\n                        type: object\n                    required:\n                    - key\n                    - value\n                    type: object\n                  type: array\n              type: object\n          type: object\n  version: v1beta1\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []\n---\n# Source: alauda-container-platform/templates/notification/notificationtemplate_crd.yaml\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: null\n  labels:\n    controller-tools.k8s.io: \"1.0\"\n  name: notificationtemplates.aiops.alauda.io\nspec:\n  group: aiops.alauda.io\n  names:\n    kind: NotificationTemplate\n    plural: notificationtemplates\n    shortNames:\n    - nft\n  scope: Cluster\n  validation:\n    openAPIV3Schema:\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          type: object\n        spec:\n          properties:\n            content:\n              description: Content template to render notification message\n              type: string\n            subject:\n              description: Subject template to render notification message\n              type: string\n          required:\n          - subject\n          - content\n          type: object\n      required:\n      - spec\n  version: v1beta1\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []\n---\n# Source: alauda-container-platform/templates/docs/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.alauda.io/name: acp-docs.alauda-system\n    chart: 'alauda-container-platform'\n  name: acp-docs\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-80\n      port: 80\n      protocol: TCP\n  selector:\n    app.alauda.io/name: acp-docs.alauda-system\n  sessionAffinity: None\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/log/tiny-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: tiny\n  name: tiny\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-tiny\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n  selector:\n    service_name: tiny\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\n# Source: alauda-container-platform/templates/monitoring/hedwig_service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: hedwig\n  name: hedwig\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-hedwig\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n    - name: metrics\n      port: 8081\n      protocol: TCP\n      targetPort: 8080\n  selector:\n    service_name: hedwig\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/monitoring/mars_service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: mars\n  name: mars\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-mars\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n    - name: metrics\n      port: 8081\n      protocol: TCP\n      targetPort: 8080\n  selector:\n    service_name: mars\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/monitoring/morgans_service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: morgans\n  name: morgans\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-morgans\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n    - name: metrics\n      port: 8081\n      protocol: TCP\n      targetPort: 8080\n  selector:\n    service_name: morgans\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/notification/courier_service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: courier\n  name: courier\n  namespace: alauda-system\nspec:\n  ports:\n    - name: http-courier\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n    - name: metrics\n      port: 8081\n      protocol: TCP\n      targetPort: 8080\n  selector:\n    service_name: courier\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/ui/icarus-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: icarus\n  namespace: alauda-system\n  labels:\n      app.alauda.io/name: icarus.alauda-system\n      chart: 'alauda-container-platform'\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app.alauda.io/name: icarus.alauda-system\n  type: ClusterIP\n---\n# Source: alauda-container-platform/templates/docs/deployments.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.alauda.io/name: acp-docs.alauda-system\n    chart: 'alauda-container-platform'\n  name: acp-docs\n  namespace: alauda-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.alauda.io/name: acp-docs.alauda-system\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app.alauda.io/name: acp-docs.alauda-system\n        app: acp-docs.alauda-system\n        chart: 'alauda-container-platform'\n        version: '1'\n    spec:\n      containers:\n      - name: acp-docs\n        image: 'index.alauda.cn/alaudaorg/acp-docs:v2.3-b.1'\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /acp-docs\n            port: 80\n            scheme: HTTP\n          initialDelaySeconds: 15\n          periodSeconds: 20\n          successThreshold: 1\n          timeoutSeconds: 1\n        ports:\n        - containerPort: 80\n          protocol: TCP\n        resources:\n          limits:\n            cpu: \"2\"\n            memory: 4Gi\n          requests:\n            cpu: 256m\n            memory: 512Mi\n---\n# Source: alauda-container-platform/templates/log/tiny-deployment.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: tiny\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: tiny\n  namespace: alauda-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      service_name: tiny\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        service_name: tiny\n        version: v1\n        app: tiny\n        chart: 'alauda-container-platform'\n      namespace: alauda-system\n    spec:\n      affinity:\n        podAffinity: {}\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: service_name\n                    operator: In\n                    values:\n                      - tiny\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - env:\n        - name: LOG_TO_STDOUT\n          value: 'false'\n        - name: COMP_NAME\n          value: tiny\n        - name: SUPPORT_MODE\n          value: STANDARD\n        - name: SKIP_AUTH_CHECK\n          value: flase\n        - name: COMP_WHITELIST\n          value: puck,architect,bane,bind,chen,darchrow,davion,dbpool,druid_api,druid-celery,druid-celery-worker,druid_clean,elasticsearch,enigma,furion,furion_worker,hbase,heimdall,huskar,jakiro,jakiro2,kafka,lanaya,lightkeeper,lucifer,lycan,medusa,minio,mirana2,observer,opentsdb,phoenix,postgres,razzil,public-registry,riki,rubick,sven_api,sven_worker,thrall,tiny,tiny_proxy,tresdin,windranger,wukong,docker_daemon_proxy,coil_client,xin_agent,zookeeper,dd_agent_server,controller_haproxy,dd_agent,registry,xin_driver,internal_haproxy,doom,haproxy,alb_haproxy,nevermore\n        - name: EVENT_KAFKA_ENABLE\n          value: 'true'\n        - name: FORWARD_OLD_METRICS_TO_OPENTSDB\n          value: 'true'\n        - name: JAKIRO_ENDPOINT\n          value: 'http://jakiro:80'\n        - name: JAKIRO_INNER_ENDPOINT\n          value: 'http://jakiro:8080'\n        - name: KAFKA_HOSTS\n          value: 10.0.128.47:9092,10.0.128.79:9092,10.0.128.100:9092\n        - name: KROBELUS_ENDPOINT\n          value: 'http://krobelus:80'\n        - name: LOCALE\n          value: cn\n        - name: LOG_BLACK_LIST\n          value: ABC\n        - name: MEDUSA_ENDPOINT\n          value: 'http://medusa:80'\n        - name: SOURCE\n          value: tiny\n        - name: STORAGE_HOST\n          value: http://alauda-elasticsearch:9200\n        - name: STORAGE_PASSWORD\n          value: ''\n        - name: STORAGE_USERNAME\n          value: ''\n        - name: TRACE_ENABLED\n          value: 'true'\n        - name: UPDATE_DB_FORCED\n          value: 'False'\n        - name: WORKER_NUMBER\n          value: '20'\n        - name: __FILE_LOG_PATH__\n          value: '/var/log/mathilde/*.log,/var/log/nginx/*,/var/log/uwsgi/*'\n        image: index.alauda.cn/alaudaorg/tiny:v2.2-b.5\n        imagePullPolicy: Always\n        ports:\n          - containerPort: 8080\n            protocol: TCP\n        resources:\n          limits:\n            cpu: \"2\"\n            memory: 4Gi\n          requests:\n            cpu: 256m\n            memory: 512Mi\n        livenessProbe:\n          failureThreshold: 2\n          httpGet:\n            path: /_ping\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 100\n          periodSeconds: 2\n          successThreshold: 1\n          timeoutSeconds: 15\n        name: tiny\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /_ping\n            port: 8080\n            scheme: HTTP\n          periodSeconds: 5\n          successThreshold: 1\n          timeoutSeconds: 15\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: \"/etc/pass_es\"\n          name: alauda-es\n          readOnly: true\n        - mountPath: /etc/hosts\n          name: etc-hosts\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 10\n      volumes:\n      - name: alauda-es\n        secret:\n          secretName: alauda-es\n      - name: etc-hosts\n        hostPath:\n          path: /etc/hosts\n          type: ''\n---\n# Source: alauda-container-platform/templates/monitoring/hedwig_deploy.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: hedwig\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: hedwig\n  namespace: alauda-system\nspec:\n#  serviceAccountName: aiops-admin\n  replicas: 1\n  selector:\n    matchLabels:\n      service_name: hedwig\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        service_name: hedwig\n        chart: 'alauda-container-platform'\n      namespace: alauda-system\n    spec:\n      affinity:\n        podAffinity: {}\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: service_name\n                    operator: In\n                    values:\n                      - hedwig\n              topologyKey: kubernetes.io/hostname\n      containers:\n        - env:\n            - name: EREBUS_ENDPOINT\n              value: 'https://erebus'\n            - name: FURION_APIVERSION\n              value: v1\n            - name: FURION_ENDPOINT\n              value: 'http://furion:8080'\n            - name: HEDWIG_CRD_ENABLED\n              value: 'true'\n            - name: KUBERNETES_ENDPOINT\n              value: 'https://kubernetes.default.svc.cluster.local'\n            - name: TINY_APIVERSION\n              value: v1\n            - name: TINY_ENDPOINT\n              value: 'http://tiny:8080'\n            - name: __FILE_LOG_PATH__\n              value: '/var/log/mathilde/hedwig.log,/var/log/supervisor/supervisord.log'\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.name\n            - name: NAMESPACE\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.namespace\n          image: index.alauda.cn/alaudaorg/hedwig:v2.2-b.2\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            protocol: TCP\n          resources:\n            limits:\n              cpu: \"2\"\n              memory: 4Gi\n            requests:\n              cpu: 256m\n              memory: 512Mi\n          name: hedwig\n      restartPolicy: Always\n---\n# Source: alauda-container-platform/templates/monitoring/mars_deploy.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: mars\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: mars\n  namespace: alauda-system\nspec:\n#  serviceAccountName: aiops-admin\n  replicas: 1\n  selector:\n    matchLabels:\n      service_name: mars\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        service_name: mars\n        chart: 'alauda-container-platform'\n      namespace: alauda-system\n    spec:\n      affinity:\n        podAffinity: {}\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: service_name\n                    operator: In\n                    values:\n                      - mars\n              topologyKey: kubernetes.io/hostname\n      containers:\n        - env:\n            - name: ELASTICSEARCH_ENDPOINT\n              value: http://alauda-elasticsearch:9200\n            - name: EREBUS_ENDPOINT\n              value: 'https://erebus'\n            - name: KUBERNETES_ENDPOINT\n              value: 'https://kubernetes.default.svc.cluster.local'\n            - name: LOG_LEVEL\n              value: 'info'\n            - name: LOG_SIZE\n              value: '100'\n            - name: LOG_BACKUP\n              value: '2'\n            - name: MARS_CRD_ENABLED\n              value: 'true'\n            - name: __FILE_LOG_PATH__\n              value: '/var/log/mathilde/mars.log,/var/log/supervisor/supervisord.log'\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.name\n            - name: NAMESPACE\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.namespace\n          image: index.alauda.cn/alaudaorg/mars:v2.2-b.5\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            protocol: TCP\n          resources:\n            limits:\n              cpu: \"2\"\n              memory: 4Gi\n            requests:\n              cpu: 256m\n              memory: 512Mi\n          livenessProbe:\n            failureThreshold: 2\n            httpGet:\n              path: /_ping\n              port: 8080\n              scheme: HTTP\n            initialDelaySeconds: 100\n            periodSeconds: 2\n            successThreshold: 1\n            timeoutSeconds: 15\n          name: mars\n          readinessProbe:\n            failureThreshold: 3\n            httpGet:\n              path: /_ping\n              port: 8080\n              scheme: HTTP\n            periodSeconds: 5\n            successThreshold: 1\n            timeoutSeconds: 15\n          volumeMounts:\n            - mountPath: \"/etc/pass_es\"\n              name: alauda-es\n              readOnly: true\n            - mountPath: /etc/hosts\n              name: etc-hosts\n      restartPolicy: Always\n      volumes:\n        - name: alauda-es\n          secret:\n            secretName: alauda-es\n        - name: etc-hosts\n          hostPath:\n            path: /etc/hosts\n            type: ''\n---\n# Source: alauda-container-platform/templates/monitoring/morgans_deploy.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: morgans\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: morgans\n  namespace: alauda-system\nspec:\n#  serviceAccountName: aiops-admin\n  replicas: 1\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      service_name: morgans\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        service_name: morgans\n        version: v1\n        app: morgans\n        chart: 'alauda-container-platform'\n      namespace: alauda-system\n    spec:\n      affinity:\n        podAffinity: {}\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: service_name\n                    operator: In\n                    values:\n                      - morgans\n              topologyKey: kubernetes.io/hostname\n      containers:\n        - env:\n            - name: ALERT_MESSAGE_TEMPLATES_ENABLED\n              value: 'false'\n            - name: ALERT_MESSAGE_TEMPLATES_LANG\n              value: 'CN'\n            - name: DAVION_APIVERSION\n              value: 'v1'\n            - name: DAVION_ENDPOINT\n              value: 'http://davion:80'\n            - name: DAVION_ENABLED\n              value: 'true'\n            - name: EREBUS_ENDPOINT\n              value: 'https://erebus'\n            - name: FURION_APIVERSION\n              value: 'v2'\n            - name: FURION_ENDPOINT\n              value: 'http://furion:8080'\n            - name: KROBELUS_APIVERSION\n              value: 'v1'\n            - name: KROBELUS_ENDPOINT\n              value: 'http://krobelus:80'\n            - name: KUBERNETES_ENDPOINT\n              value: 'https://kubernetes.default.svc.cluster.local'\n            - name: LOG_BACKUP\n              value: '2'\n            - name: LOG_LEVEL\n              value: 'info'\n            - name: LOG_SIZE\n              value: '100'\n            - name: MORGANS_CRD_ENABLED\n              value: 'true'\n            - name: __FILE_LOG_PATH__\n              value: '/var/log/mathilde/morgans.log,/var/log/mathilde/cache.log,/var/log/mathilde/daemon.log,/var/log/mathilde/notification.log,/var/log/supervisor/supervisord.log'\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.name\n            - name: NAMESPACE\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.namespace\n          image: index.alauda.cn/alaudaorg/morgans:v2.3-b.4\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            protocol: TCP\n          resources:\n            limits:\n              cpu: \"2\"\n              memory: 4Gi\n            requests:\n              cpu: 256m\n              memory: 512Mi\n          livenessProbe:\n            failureThreshold: 2\n            httpGet:\n              path: /_ping\n              port: 8080\n              scheme: HTTP\n            initialDelaySeconds: 100\n            periodSeconds: 2\n            successThreshold: 1\n            timeoutSeconds: 15\n          name: morgans\n          readinessProbe:\n            failureThreshold: 3\n            httpGet:\n              path: /_ping\n              port: 8080\n              scheme: HTTP\n            periodSeconds: 5\n            successThreshold: 1\n            timeoutSeconds: 15\n      restartPolicy: Always\n---\n# Source: alauda-container-platform/templates/notification/courier_deploy.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: courier\n  labels:\n    chart: 'alauda-container-platform'\n    service_name: courier\n  namespace: alauda-system\nspec:\n#  serviceAccountName: aiops-admin\n  replicas: 1\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      service_name: courier\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        service_name: courier\n        version: v1\n        app: courier\n        chart: 'alauda-container-platform'\n      namespace: alauda-system\n    spec:\n      affinity:\n        podAffinity: {}\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: service_name\n                    operator: In\n                    values:\n                      - courier\n              topologyKey: kubernetes.io/hostname\n      containers:\n        - env:\n            - name: COURIER_WEBHOOK_ENABLED\n              value: 'false'\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.name\n            - name: NAMESPACE\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: metadata.namespace\n          image: index.alauda.cn/alaudaorg/courier:v2.2-b.5\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            protocol: TCP\n          resources:\n            limits:\n              cpu: \"2\"\n              memory: 4Gi\n            requests:\n              cpu: 256m\n              memory: 512Mi\n          livenessProbe:\n            failureThreshold: 2\n            httpGet:\n              path: /metrics\n              port: 8080\n              scheme: HTTP\n            initialDelaySeconds: 100\n            periodSeconds: 2\n            successThreshold: 1\n            timeoutSeconds: 15\n          name: courier\n          readinessProbe:\n            failureThreshold: 3\n            httpGet:\n              path: /metrics\n              port: 8080\n              scheme: HTTP\n            periodSeconds: 5\n            successThreshold: 1\n            timeoutSeconds: 15\n      restartPolicy: Always\n---\n# Source: alauda-container-platform/templates/ui/icarus-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.alauda.io/name: icarus.alauda-system\n    chart: 'alauda-container-platform'\n  name: icarus\n  namespace: alauda-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.alauda.io/name: icarus.alauda-system\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app.alauda.io/name: icarus.alauda-system\n        chart: 'alauda-container-platform'\n    spec:\n      containers:\n      - args:\n          - --log-level=debug\n          - --log-disable-color\n          - --log-enable-caller\n          - --path-prefix=/console-acp\n          - --assets-host-path=$(SHARED_FOLDER)\n          - --oidc-issuer-url=https://acp.cp-int.myalauda.cn/dex\n          - --oidc-client-id=alauda-auth\n          - --oidc-client-secret=ZXhhbXBsZS1hcHAtc2VjcmV0\n          - --oidc-redirect-url=https://acp.cp-int.myalauda.cn/console-acp/\n          - --oidc-protocol-override=\n          - --api-address=https://acp.cp-int.myalauda.cn\n        env:\n          - name: SHARED_FOLDER\n            value: /static\n          - name: label_base_domain\n            value: alauda.io\n          - name: ALAUDA_EVENT_TTL\n            value: 30d\n          - name: ALAUDA_ES_TTL\n            value: 7d\n          - name: ALAUDA_AUDIT_TTL\n            value: 30d\n          - name: SYNC_TKE\n            valueFrom:\n              configMapKeyRef:\n                name: ui-config\n                key: SYNC_TKE\n          - name: LOGO_URL\n            valueFrom:\n              configMapKeyRef:\n                name: ui-config\n                key: LOGO_URL\n        image: \"index.alauda.cn/alaudak8s/alauda-console:v2.2-b.4\"\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /healthz\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 15\n          periodSeconds: 20\n          successThreshold: 1\n          timeoutSeconds: 1\n        name: alauda-console\n        ports:\n          - containerPort: 8080\n            protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /_ping\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        volumeMounts:\n          - name: shared\n            mountPath: /static\n          - mountPath: /static/logos/logo.svg\n            name: ui-logo\n            subPath: logo.svg\n          - mountPath: /static/logos/favicon.ico\n            name: ui-logo\n            subPath: favicon.ico\n      initContainers:\n        - command:\n            - sh\n            - /config/copy_static.sh\n          env:\n            - name: SHARED_FOLDER\n              value: /static\n            - name: STATIC_FILES\n              value: /icarus/dist/static\n          image: \"index.alauda.cn/alaudaorg/icarus:v2.3-b.17\"\n          imagePullPolicy: Always\n          name: icarus\n          volumeMounts:\n            - name: shared\n              mountPath: /static\n            - name: ui-config\n              mountPath: /config\n      restartPolicy: Always\n      volumes:\n        - name: shared\n          emptyDir: {}\n        - name: ui-config\n          configMap:\n            name: ui-config\n        - name: ui-logo\n          configMap:\n            name: ui-logo\n            items:\n              - key: favicon.ico\n                path: favicon.ico\n              - key: logo.svg\n                path: logo.svg\n---\n# Source: alauda-container-platform/templates/docs/ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  labels:\n    app.alauda.io/name: acp-docs.alauda-system\n    chart: 'alauda-container-platform'\n  name: acp-docs\n  namespace: alauda-system\nspec:\n  rules:\n    - host: acp.cp-int.myalauda.cn\n      http:\n        paths:\n          - path: /acp-docs/\n            backend:\n              serviceName: acp-docs\n              servicePort: 80\n---\n# Source: alauda-container-platform/templates/log/tiny-input-log-ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/enable-cors: \"true\"\n    nginx.ingress.kubernetes.io/rewrite-target: /v1/callback/tiny/logs/services\n  name: tiny-input-logs\n  namespace: alauda-system\n  labels:\n    chart: 'alauda-container-platform'\nspec:\n  rules:\n  - host: acp.cp-int.myalauda.cn\n    http:\n      paths:\n      - backend:\n          serviceName: tiny\n          servicePort: 8080\n        path: /v3/logs/callback\n---\n# Source: alauda-container-platform/templates/log/tiny-kevents-ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/enable-cors: \"true\"\n  name: tiny-kevents\n  namespace: alauda-system\n  labels:\n    chart: 'alauda-container-platform'\nspec:\n  rules:\n  - host: acp.cp-int.myalauda.cn\n    http:\n      paths:\n      - backend:\n          serviceName: tiny\n          servicePort: 8080\n        path: /v2/kevents.*\n---\n# Source: alauda-container-platform/templates/log/tiny-logs-ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/enable-cors: \"true\"\n    nginx.ingress.kubernetes.io/rewrite-target: /v1/logs/query/$1\n  name: tiny-log-query\n  namespace: alauda-system\n  labels:\n    chart: 'alauda-container-platform'\nspec:\n  rules:\n    - host: acp.cp-int.myalauda.cn\n      http:\n        paths:\n          - backend:\n              serviceName: tiny\n              servicePort: 8080\n            path: /v3/logs/default/(.*)\n---\n# Source: alauda-container-platform/templates/monitoring/morgans_ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/enable-cors: \"true\"\n#    nginx.ingress.kubernetes.io/rewrite-target: /v2/regions/$2\n  name: morgans\n  namespace: alauda-system\n  labels:\n    chart: 'alauda-container-platform'\nspec:\n  rules:\n  - host: acp.cp-int.myalauda.cn\n    http:\n      paths:\n      - backend:\n          serviceName: morgans\n          servicePort: 8080\n        path: /v1/alerts\n      - backend:\n          serviceName: morgans\n          servicePort: 8080\n        path: /v1/metrics\n      - backend:\n          serviceName: morgans\n          servicePort: 8080\n        path: /v1/config/alerts\n      - backend:\n          serviceName: morgans\n          servicePort: 8080\n        path: /v1/alert_templates\n      - backend:\n          serviceName: morgans\n          servicePort: 8080\n        path: /v1/notifications\n---\n# Source: alauda-container-platform/templates/ui/icarus-ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    ingress.kubernetes.io/rewrite-target: /\n  labels:\n      app.alauda.io/name: icarus.alauda-system\n      chart: 'alauda-container-platform'\n  name: icarus\n  namespace: alauda-system\nspec:\n  rules:\n  - host: acp.cp-int.myalauda.cn\n    http:\n      paths:\n      - backend:\n          serviceName: icarus\n          servicePort: 8080\n        path: /console-acp/\n      - backend:\n          serviceName: icarus\n          servicePort: 8080\n        path: /console-acp\n---\n# Source: alauda-container-platform/templates/alauda-product-cr.yaml\napiVersion: portal.alauda.io/v1alpha1\nkind: AlaudaProduct\nmetadata:\n  labels:\n    chart: 'alauda-container-platform'\n  annotations:\n    alauda.io/display-name: Container Platform\n  name: console-acp\nspec:\n  homepage: /console-acp/\n  index: 0\n---\n# Source: alauda-container-platform/templates/log/es-ttl-config.yaml\napiVersion: \"aiops.alauda.io/v1beta1\"\nkind: Logs\nmetadata:\n  name: alauda-es-config\n  namespace: alauda-system\n  labels:\n    chart: \"alauda-container-platform-v2.3-b.19-2.2\"\nspec:\n  LOG_TTL: 30\n  EVENT_TTL: 30\n  AUDIT_TTL: 7\n"
	result, err := ParseFromManifest(manifest)
	assert.Nil(t, err)
	assert.Equal(t, len(result), 28)
}
